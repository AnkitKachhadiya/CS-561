/*
1. For each customer, compute the minimum and maximum sales quantities along with
the corresponding products, dates (i.e., dates of those maximum and minimum sales
quantities) and the states in which the sale transactions took place. For the same
customer, also compute the average sales quantity.
*/

WITH SALES_SUMMARY AS
	(SELECT CUST AS "CUSTOMER",
			MIN(QUANT) AS "MIN_Q",
			MAX(QUANT) AS "MAX_Q",
			AVG(QUANT) AS "AVG_Q"
		FROM SALES
		GROUP BY CUST),
	SALES_MIN AS
	(SELECT SALES_SUMMARY."CUSTOMER",
			SALES_SUMMARY."MIN_Q",
			PROD AS "MIN_PROD",
			DATE AS "MIN_DATE",
			STATE AS "ST",
			SALES_SUMMARY."MAX_Q",
			SALES_SUMMARY."AVG_Q"
		FROM SALES
		JOIN SALES_SUMMARY ON SALES_SUMMARY."CUSTOMER" = SALES.CUST
		AND SALES_SUMMARY."MIN_Q" = SALES.QUANT)
SELECT SALES_MIN."CUSTOMER",
	SALES_MIN."MIN_Q",
	SALES_MIN."MIN_PROD",
	SALES_MIN."MIN_DATE",
	SALES_MIN."ST",
	SALES_MIN."MAX_Q",
	SALES_MAX.PROD AS "MAX_PROD",
	SALES_MAX.DATE AS "MAX_DATE",
	SALES_MAX.STATE AS "ST",
	SALES_MIN."AVG_Q"
FROM SALES AS SALES_MAX
JOIN SALES_MIN ON SALES_MIN."CUSTOMER" = SALES_MAX.CUST
AND SALES_MIN."MAX_Q" = SALES_MAX.QUANT;


/*
2. For each combination of customer and product, output the maximum sales quantities for 
October (regardless of the year, that is, both 10/11/2016 and 10/23/2019 are considered 
sales transactions for October) and minimum sales quantities for November and 
December (again, regardless of the year) in 3 separate columns. Like the first report, 
display the corresponding dates (i.e., dates of those maximum and minimum sales 
quantities). Furthermore, for October (MAX), include only the sales that occurred after 
2017 (that is, not to include sales that occurred in 2017 or earlier); for November (MIN) 
and December (MIN), include all sales.
*/

WITH OCT_SUMMARY AS
	(SELECT CUST AS "CUSTOMER",
			PROD AS "PRODUCT",
			MAX(QUANT) AS "OCT_MAX"
		FROM SALES
		WHERE MONTH = 10
			AND YEAR > 2017
		GROUP BY CUST,
			PROD),
	OCT_DATE AS
	(SELECT OCT_SUMMARY."CUSTOMER",
			OCT_SUMMARY."PRODUCT",
			OCT_SUMMARY."OCT_MAX",
			SALES.DATE AS "OCT_DATE"
		FROM SALES
		JOIN OCT_SUMMARY ON OCT_SUMMARY."CUSTOMER" = SALES.CUST
		AND OCT_SUMMARY."PRODUCT" = SALES.PROD
		AND OCT_SUMMARY."OCT_MAX" = SALES.QUANT
		AND SALES.MONTH = 10
		AND SALES.YEAR > 2017),
	NOV_SUMMARY AS
	(SELECT CUST AS "CUSTOMER",
			PROD AS "PRODUCT",
			MIN(QUANT) AS "NOV_MIN"
		FROM SALES
		WHERE MONTH = 11
		GROUP BY CUST,
			PROD),
	NOV_DATE AS
	(SELECT NOV_SUMMARY."CUSTOMER",
			NOV_SUMMARY."PRODUCT",
			NOV_SUMMARY."NOV_MIN",
			SALES.DATE AS "NOV_DATE"
		FROM SALES
		JOIN NOV_SUMMARY ON NOV_SUMMARY."CUSTOMER" = SALES.CUST
		AND NOV_SUMMARY."PRODUCT" = SALES.PROD
		AND NOV_SUMMARY."NOV_MIN" = SALES.QUANT
		AND SALES.MONTH = 11),
	DEC_SUMMARY AS
	(SELECT CUST AS "CUSTOMER",
			PROD AS "PRODUCT",
			MIN(QUANT) AS "DEC_MIN"
		FROM SALES
		WHERE MONTH = 12
		GROUP BY CUST,
			PROD),
	DEC_DATE AS
	(SELECT DEC_SUMMARY."CUSTOMER",
			DEC_SUMMARY."PRODUCT",
			DEC_SUMMARY."DEC_MIN",
			SALES.DATE AS "DEC_DATE"
		FROM SALES
		JOIN DEC_SUMMARY ON DEC_SUMMARY."CUSTOMER" = SALES.CUST
		AND DEC_SUMMARY."PRODUCT" = SALES.PROD
		AND DEC_SUMMARY."DEC_MIN" = SALES.QUANT
		AND SALES.MONTH = 12)
SELECT OCT_DATE."CUSTOMER",
	OCT_DATE."PRODUCT",
	OCT_DATE."OCT_MAX",
	OCT_DATE."OCT_DATE",
	NOV_DATE."NOV_MIN",
	NOV_DATE."NOV_DATE",
	DEC_DATE."DEC_MIN",
	DEC_DATE."DEC_DATE"
FROM OCT_DATE
JOIN NOV_DATE ON NOV_DATE."CUSTOMER" = OCT_DATE."CUSTOMER"
AND NOV_DATE."PRODUCT" = OCT_DATE."PRODUCT"
JOIN DEC_DATE ON DEC_DATE."CUSTOMER" = OCT_DATE."CUSTOMER"
AND DEC_DATE."PRODUCT" = OCT_DATE."PRODUCT";


/*
3. For each of the 12 months (regardless of the year), find the most “popular” and least 
“popular” products (those products with most and least total sales quantities) and the 
corresponding total sales quantities (i.e., SUMs).
*/

WITH SALES_SUMMARY AS
	(SELECT MONTH AS "MONTH",
			PROD AS "PRODUCT",
			SUM(QUANT) AS "TOTAL_PRODUCT_MONTHLY_Q"
		FROM SALES
		GROUP BY MONTH,
			PROD),
	SALES_MIN_MAX AS
	(SELECT "MONTH",
			MAX("TOTAL_PRODUCT_MONTHLY_Q") AS "MOST_POP_TOTAL_Q",
			MIN("TOTAL_PRODUCT_MONTHLY_Q") AS "LEAST_POP_TOTAL_Q"
		FROM SALES_SUMMARY
		GROUP BY "MONTH"),
	SALES_MAX AS
	(SELECT SALES_SUMMARY."MONTH",
			SALES_SUMMARY."PRODUCT" AS "MOST_POPULAR_PROD",
			SALES_MIN_MAX."MOST_POP_TOTAL_Q"
		FROM SALES_SUMMARY
		JOIN SALES_MIN_MAX ON SALES_MIN_MAX."MONTH" = SALES_SUMMARY."MONTH"
		AND SALES_MIN_MAX."MOST_POP_TOTAL_Q" = SALES_SUMMARY."TOTAL_PRODUCT_MONTHLY_Q")
SELECT SALES_SUMMARY."MONTH",
	SALES_MAX."MOST_POPULAR_PROD",
	SALES_MAX."MOST_POP_TOTAL_Q",
	SALES_SUMMARY."PRODUCT" AS "LEAST_POPULAR_PROD",
	SALES_MIN_MAX."LEAST_POP_TOTAL_Q"
FROM SALES_SUMMARY
JOIN SALES_MIN_MAX ON SALES_MIN_MAX."MONTH" = SALES_SUMMARY."MONTH"
AND SALES_MIN_MAX."LEAST_POP_TOTAL_Q" = SALES_SUMMARY."TOTAL_PRODUCT_MONTHLY_Q"
JOIN SALES_MAX ON SALES_MAX."MONTH" = SALES_SUMMARY."MONTH";


/*
4. For each product, find the “most favorable” month (when most amount of the product was 
sold) and the “least favorable” month (when the least amount of the product was sold).
*/

WITH SALES_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			MONTH AS "MONTH",
			SUM(QUANT) AS "TOTAL_PRODUCT_MONTHLY_Q"
		FROM SALES
		GROUP BY MONTH,
			PROD),
	SALES_MIN_MAX AS
	(SELECT "PRODUCT",
			MAX("TOTAL_PRODUCT_MONTHLY_Q") AS "MOST_POP_TOTAL_Q",
			MIN("TOTAL_PRODUCT_MONTHLY_Q") AS "LEAST_POP_TOTAL_Q"
		FROM SALES_SUMMARY
		GROUP BY "PRODUCT"),
	SALES_MAX AS
	(SELECT SALES_SUMMARY."PRODUCT",
			SALES_SUMMARY."MONTH" AS "MOST_FAV_MO"
		FROM SALES_SUMMARY
		JOIN SALES_MIN_MAX ON SALES_MIN_MAX."MOST_POP_TOTAL_Q" = SALES_SUMMARY."TOTAL_PRODUCT_MONTHLY_Q")
SELECT SALES_MAX."PRODUCT",
	SALES_MAX."MOST_FAV_MO",
	SALES_SUMMARY."MONTH" AS "LEAST_FAV_MO"
FROM SALES_SUMMARY
JOIN SALES_MIN_MAX ON SALES_MIN_MAX."LEAST_POP_TOTAL_Q" = SALES_SUMMARY."TOTAL_PRODUCT_MONTHLY_Q"
JOIN SALES_MAX ON SALES_MAX."PRODUCT" = SALES_SUMMARY."PRODUCT"
ORDER BY "PRODUCT";


/*
5. For the years 2016, 2017, 2018, 2019 and 2020, show, for each product and customer 
combination, the average sales quantities for the 4 states, ‘CT’, ‘NY’, ‘NJ’ and ‘PA’ (in four 
separate columns). Also compute the average for the “whole” year (again ignoring the 
YEAR component, meaning simply compute AVG) along with the total quantities (SUM) 
and the counts (COUNT).
*/

WITH SALES_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			CUST AS "CUSTOMER",
			AVG(QUANT) AS "AVERAGE",
			SUM(QUANT) AS "TOTAL",
			COUNT(QUANT) AS "COUNT"
		FROM SALES
		GROUP BY PROD,
			CUST),
	SALES_CT_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			CUST AS "CUSTOMER",
			AVG(QUANT) AS "CT_AVG"
		FROM SALES
		WHERE YEAR BETWEEN 2016 AND 2020
			AND STATE = 'CT'
		GROUP BY PROD,
			CUST),
	SALES_NY_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			CUST AS "CUSTOMER",
			AVG(QUANT) AS "NY_AVG"
		FROM SALES
		WHERE YEAR BETWEEN 2016 AND 2020
			AND STATE = 'NY'
		GROUP BY PROD,
			CUST),
	SALES_NJ_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			CUST AS "CUSTOMER",
			AVG(QUANT) AS "NJ_AVG"
		FROM SALES
		WHERE YEAR BETWEEN 2016 AND 2020
			AND STATE = 'NJ'
		GROUP BY PROD,
			CUST),
	SALES_PA_SUMMARY AS
	(SELECT PROD AS "PRODUCT",
			CUST AS "CUSTOMER",
			AVG(QUANT) AS "PA_AVG"
		FROM SALES
		WHERE YEAR BETWEEN 2016 AND 2020
			AND STATE = 'PA'
		GROUP BY PROD,
			CUST)
SELECT SALES_SUMMARY."PRODUCT",
	SALES_SUMMARY."CUSTOMER",
	SALES_CT_SUMMARY."CT_AVG",
	SALES_NY_SUMMARY."NY_AVG",
	SALES_NJ_SUMMARY."NJ_AVG",
	SALES_PA_SUMMARY."PA_AVG",
	SALES_SUMMARY."AVERAGE",
	SALES_SUMMARY."TOTAL",
	SALES_SUMMARY."COUNT"
FROM SALES_SUMMARY
JOIN SALES_CT_SUMMARY ON SALES_CT_SUMMARY."PRODUCT" = SALES_SUMMARY."PRODUCT"
AND SALES_CT_SUMMARY."CUSTOMER" = SALES_SUMMARY."CUSTOMER"
JOIN SALES_NY_SUMMARY ON SALES_NY_SUMMARY."PRODUCT" = SALES_SUMMARY."PRODUCT"
AND SALES_NY_SUMMARY."CUSTOMER" = SALES_SUMMARY."CUSTOMER"
JOIN SALES_NJ_SUMMARY ON SALES_NJ_SUMMARY."PRODUCT" = SALES_SUMMARY."PRODUCT"
AND SALES_NJ_SUMMARY."CUSTOMER" = SALES_SUMMARY."CUSTOMER"
JOIN SALES_PA_SUMMARY ON SALES_PA_SUMMARY."PRODUCT" = SALES_SUMMARY."PRODUCT"
AND SALES_PA_SUMMARY."CUSTOMER" = SALES_SUMMARY."CUSTOMER";